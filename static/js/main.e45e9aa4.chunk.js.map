{"version":3,"sources":["components/UserSignup.js","components/StartGame.js","components/Login.js","components/LocationRequester.js","components/GoogleMap.js","components/Target.js","containers/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["API","UserSignup","state","name","alias","password_digest","id","onChange","e","_this","setState","Object","defineProperty","target","value","onSubmit","user","objectSpread","preventDefault","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","json","response","console","log","_this$state","this","game","react_default","a","createElement","className","htmlFor","type","placeholder","Component","StartGame","Login","props","loginUser","err","LocationRequester","geo_success","position","getLocationData","geo_error","geo_options","enableHighAccuracy","maximumAge","timeout","navigator","geolocation","watchPosition","AnyReactComponent","_ref","text","GoogleMap","center","lat","lng","zoom","long","style","height","width","lib_default","bootstrapURLKeys","key","defaultCenter","defaultZoom","GoogleMap_AnyReactComponent","Target","components_GoogleMap","longitude","latitude","Dashboard","currentuser","components_Target","App","timestamp","coords","nextProps","nextState","Math","abs","concat","data","components_LocationRequester","components_UserSignup","components_Login","components_StartGame","containers_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e45e9aa4.chunk.js","sourcesContent":["import React, { Component } from 'react'\nconst API = 'https://murder-with-friends.herokuapp.com/users/create/'\n\nclass UserSignup extends Component {\n\n  state = {\n    name: '',\n    alias: '',\n    password_digest: '',\n    id: 1\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onSubmit = (e) => {\n    const user = { ...this.state }\n    e.preventDefault()\n    if (user.name !== '' && user.alias !== '' && user.password_digest !== '') {\n      fetch(API, {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify(user), // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json())\n        .then(response => console.log('Success:', response))\n    }\n    else\n      {console.log(\"refused to submit due to user failure\")}\n  }\n\n  render() {\n    const { name, alias, game, password_digest } = this.state\n    return (\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-row\">\n          <div className=\"form-group col-md-6\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={this.onChange} />\n          </div>\n          <div className=\"form-group col-md-6\">\n            <label htmlFor=\"name\">Alias</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"alias\"\n              placeholder=\"Enter name\"\n              value={alias}\n              onChange={this.onChange} />\n          </div>\n          <div className=\"form-group col-md-6\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password_digest\"\n              placeholder=\"password\"\n              value={password_digest}\n              onChange={this.onChange} />\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Sign Up\"\n            className=\"btn btn-dark btn-block\" />\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default UserSignup\n","import React, { Component } from 'react'\nconst API = 'https://murder-with-friends.herokuapp.com/games/start/'\n\nclass StartGame extends Component {\n\n  onSubmit = (e) => {\n    const game = { id: 1 }\n    e.preventDefault()\n    fetch(API, {\n      method: 'POST', // or 'PUT'\n      body: JSON.stringify(game), // data can be `string` or {object}!\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json())\n      .then(response => console.log('Success:', JSON.stringify(response)))\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-row\">\n          <input\n            type=\"submit\"\n            value=\"Start Game\"\n            className=\"btn btn-dark btn-block\" />\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default StartGame\n","import React, { Component } from 'react'\nconst API = 'https://murder-with-friends.herokuapp.com/users/login/'\n\nclass Login extends Component {\n\n  state = {\n    alias: '',\n    password_digest: ''\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  // this fails if someone enters an invalid password\n\n  onSubmit = (e) => {\n    e.preventDefault()\n    const user = { ...this.state }\n    if (user.alias !== '' && user.password_digest !== '') {try{\n      fetch(API, {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify(user), // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      }).then(res => res.json())\n        .then(user => {\n          this.props.loginUser(user)\n          this.setState({ alias: '', password_digest: '' })\n        })\n    }\n    catch(err) {console.log(\"invalid password\")}}\n    else {console.log(\"either username or password blew it\")}\n  }\n\n\n  render() {\n    const { alias, password_digest } = this.state\n    return (\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-row\">\n          <div className=\"form-group col-md-6\">\n            <label htmlFor=\"name\">Alias</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"alias\"\n              placeholder=\"Enter name\"\n              value={alias}\n              onChange={this.onChange} />\n          </div>\n          <div className=\"form-group col-md-6\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password_digest\"\n              placeholder=\"Password\"\n              value={password_digest}\n              onChange={this.onChange} />\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Login\"\n            className=\"btn btn-dark btn-block\" />\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default Login\n","import React, { Component } from 'react'\n\nclass LocationRequester extends Component {\n\n  componentDidMount(){\n    navigator.geolocation.watchPosition(this.geo_success, this.geo_error, this.geo_options);\n  }\n  geo_success = (position) => {\n    console.log(position)\n    this.props.getLocationData(position)\n  }\n\n  geo_error = () => {\n    console.log(\"not seeing anything\")\n  }\n\n    geo_options = {\n      enableHighAccuracy: true,\n      maximumAge        : 30000,\n      timeout           : 27000\n    };\n\n    render(){\n      return null\n    }\n}\n\nexport default LocationRequester\n","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nclass GoogleMap extends Component {\n\n  state = {\n    center: {\n      lat: 0,\n      lng: 0\n    },\n    zoom: 20\n  }\n\n  componentDidMount() {\n    this.setState({\n      center: {\n        lat: this.props.lat,\n        lng: this.props.long\n      }\n    })\n  }\n\n  render() {\n    console.log(\"google maps props\", this.props)\n    return (\n      // Important! Always set the container height explicitly\n      <div style={{ height: '100vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyDKFuNQt2_3uU5gvoGs-CdH1D3r_g51CLk\" }}\n          defaultCenter={this.state.center}\n          defaultZoom={this.state.zoom}\n        >\n          <AnyReactComponent\n            lat={this.props.lat}\n            lng={this.props.long}\n            text=\"X\"\n          />\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default GoogleMap;\n","import React from 'react'\nimport GoogleMap from './GoogleMap';\n\nconst Target = (props) => {\n  return (\n    <div className=\"card-body\">\n      <h5 className=\"card-title\">{props.target.name}</h5>\n      <GoogleMap long={props.target.longitude} lat={props.target.latitude} />\n    </div>\n  )\n}\n\nexport default Target\n","import React, { Component } from 'react'\nimport Target from '../components/Target';\n\nclass Dashboard extends Component {\n\n  state = {\n    target: null\n  }\n\n  componentDidMount() {\n    const target = this.props.currentuser.target\n    this.setState({ target: target })\n    console.log(\"mounting target in dashboard\", target)\n  }\n\n  render() {\n    const { target } = this.state\n    return (\n      <div className=\"card mb-3\">\n        {target ? <Target target={target} /> : null}\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n","import React, { Component } from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import Navbar from './containers/Navbar';\nimport UserSignup from './components/UserSignup';\nimport StartGame from './components/StartGame';\nimport Login from './components/Login';\nimport LocationRequester from './components/LocationRequester';\nimport Dashboard from './containers/Dashboard';\n\nconst API = \"https://murder-with-friends.herokuapp.com/users\"\n\nexport default class App extends Component {\n\n  state = {\n    latitude: null,\n    longitude: null,\n    timestamp: null,\n    currentuser: null\n  }\n\n  getLocationData = (position) => {\n    if (position.coords) {\n      this.setState({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n        timestamp: position.timestamp\n      })\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return ((Math.abs(nextState.latitude - this.state.latitude) + Math.abs(nextState.longitude - this.state.longitude)) > .00000001 || this.state.currentuser !== nextState.currentuser)\n  }\n\n  componentDidUpdate() {\n    const { longitude, latitude, currentuser, timestamp } = this.state\n    if (longitude && currentuser) {\n      console.log(\"currentuser\", currentuser)\n      fetch(API + `/${currentuser.id}/locate`, {\n        method: 'PATCH',\n        body: JSON.stringify({ latitude, longitude, timestamp }),\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      })\n        .then(res => res.json())\n        .then(data => console.log(\"post-fetch data\", data))\n    }\n  }\n\n  loginUser = (user) => {\n    console.log(\"user in login user\", user)\n    this.setState({ currentuser: user })\n  }\n\n  render() {\n    return (\n      <div>\n        <LocationRequester getLocationData={this.getLocationData} />\n        <br />\n        <UserSignup />\n        <br />\n        <Login loginUser={this.loginUser} />\n        <br />\n        <StartGame />\n        <br />\n        {this.state.currentuser ? <Dashboard currentuser={this.state.currentuser} /> : null}\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}